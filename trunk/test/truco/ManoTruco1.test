Descripción del test:
- la mano recibe [Carta(1, Palo('BASTO')), Carta(2, Palo('ESPADA')), Carta(3, Palo('ESPADA'))]
- el pie recibe [Carta(1, Palo('ESPADA')), Carta(2, Palo('ORO')), Carta(3, Palo('ORO'))]
- la mano juega Carta(1, Palo('BASTO'))
- el pie juega Carta(1, Palo('ESPADA'))
- el pie juega Carta(2, Palo('ORO'))
- la mano juega Carta(3, Palo('ESPADA')) y pierde

>>> from Carta import Carta, Palo
>>> from CantoEnvido import _cantoEnvido, _cantoEnvidoTantos
>>> from CantoTruco import _cantoTruco
>>> from ManoTruco import ManoTruco

>>> cartasMano = []
>>> cartasMano.append( Carta(1, Palo.BASTO) )
>>> cartasMano.append( Carta(2, Palo.ESPADA) )
>>> cartasMano.append( Carta(3, Palo.ESPADA) )
>>> cartasMano
[Carta(1, Palo('BASTO')), Carta(2, Palo('ESPADA')), Carta(3, Palo('ESPADA'))]
>>> cartasPie = []
>>> cartasPie.append( Carta(1, Palo.ESPADA) )
>>> cartasPie.append( Carta(2, Palo.ORO) )
>>> cartasPie.append( Carta(3, Palo.ORO) )
>>> cartasPie
[Carta(1, Palo('ESPADA')), Carta(2, Palo('ORO')), Carta(3, Palo('ORO'))]
>>> # las jugadas que se espera tener
>>> jugadasMano = cartasMano
>>> jugadasPie = cartasPie

>>> # ---------- TEST 0
>>> # Creación. El turno lo tiene Mano

>>> trucoMano = ManoTruco(cartasMano, True)
>>> trucoPie = ManoTruco(cartasPie, False)

>>> trucoMano.terminado()
False
>>> trucoPie.terminado()
False
>>> trucoMano.turnoDeJuego()
True
>>> trucoPie.turnoDeJuego()
False
>>> trucoMano.jugadasPosibles()
[Carta(1, Palo('BASTO')), Carta(2, Palo('ESPADA')), Carta(3, Palo('ESPADA')), CantoEnvido('Envido'), CantoEnvido('Envido Envido'), CantoEnvido('Real Envido'), CantoEnvido('Falta Envido'), CantoTruco('TRUCO')]
>>> trucoPie.jugadasPosibles()
[Carta(1, Palo('ESPADA')), Carta(2, Palo('ORO')), Carta(3, Palo('ORO')), CantoEnvido('Envido'), CantoEnvido('Envido Envido'), CantoEnvido('Real Envido'), CantoEnvido('Falta Envido'), CantoTruco('TRUCO')]
>>> trucoMano.ganeYo()
False
>>> trucoPie.ganeYo()
False
>>> trucoMano.recibirJugada(jugadasPie[0]) # debe fallar. El turno es de la Mano
False
>>> trucoPie.jugar(jugadasPie[0]) # debe fallar. El turno es de la Mano
False

>>> # ---------- TEST 1
>>> # La Mano juega Carta(1, Palo.BASTO)

>>> trucoMano.jugar(jugadasMano[0]) # la mano juega Carta(1, Palo.BASTO)
True
>>> trucoPie.recibirJugada(jugadasMano[0])
True

>>> trucoMano.terminado()
False
>>> trucoPie.terminado()
False
>>> trucoMano.turnoDeJuego()
False
>>> trucoPie.turnoDeJuego()
True
>>> trucoMano.jugar(jugadasMano[0])
False
>>> trucoPie.recibirJugada(jugadasMano[0])
False
>>> trucoMano.jugadasPosibles()
[Carta(2, Palo('ESPADA')), Carta(3, Palo('ESPADA')), Canto ('Me voy al mazo') ]
>>> trucoPie.jugadasPosibles()
[Carta(1, Palo('ESPADA')), Carta(2, Palo('ORO')), Carta(3, Palo('ORO')), Canto ('Me voy al mazo') ]
>>> trucoMano.ganeYo()
False
>>> trucoPie.ganeYo()
False
>>> trucoMano.jugar(jugadasMano[0]) # debe fallar. El turno es del Pie
False
>>> trucoMano.jugar(jugadasMano[1])
False
>>> trucoMano.jugar(jugadasMano[2])
False
>>> trucoPie.recibirJugada(jugadasMano[0]) # debe fallar. El turno es del Pie
False
>>> trucoPie.recibirJugada(jugadasMano[1])
False
>>> trucoPie.recibirJugada(jugadasMano[2])
False

>>> # ---------- TEST 2
>>> # El Pie juega Carta(1, Palo.ESPADA), gana la mano

>>> trucoPie.jugar(jugadasPie[0]) # el ancho de espadas mata al ancho de bastos
True
>>> trucoMano.recibirJugada(jugadasPie[0])
True

>>> trucoMano.terminado()
False
>>> trucoPie.terminado()
False
>>> trucoMano.turnoDeJuego()
False
>>> trucoPie.turnoDeJuego() # el turno lo tiene el Pie porque gano la primer submano
True
>>> trucoPie.recibirJugada(jugadasMano[0]) # debe fallar, porque el pie tiene el turno de jugar
False
>>> trucoPie.recibirJugada(jugadasMano[1])
False
>>> trucoPie.recibirJugada(jugadasMano[2])
False
>>> trucoPie.recibirJugada(jugadasMano[3])
False
>>> trucoMano.jugar(jugadasMano[0]) # debe fallar, porque el pie tiene el turno de jugar
False
>>> trucoMano.jugar(jugadasMano[1])
False
>>> trucoMano.jugar(jugadasMano[2])
False
>>> trucoMano.jugar(jugadasMano[3])
False
>>> trucoMano.jugadasPosibles()
[Carta(2, Palo('ESPADA')), Carta(3, Palo('ESPADA')), Canto ('Me voy al mazo') ]
>>> trucoPie.jugadasPosibles()
[Carta(2, Palo('ORO')), Carta(3, Palo('ORO')), Canto ('Me voy al mazo') ]
>>> trucoMano.ganeYo()
False
>>> trucoPie.ganeYo()
False


>>> # ---------- TEST 3
>>> # Es el turno del Pie, que juega Carta(2, Palo('ORO'))

>>> trucoPie.jugar(jugadasPie[1]) # Carta(2, Palo('ORO'))
True
>>> trucoMano.recibirJugada(jugadasPie[1])
True

>>> trucoMano.terminado()
False
>>> trucoPie.terminado()
False
>>> trucoMano.turnoDeJuego() # el turno lo tiene la Mano
True
>>> trucoPie.turnoDeJuego()
False
>>> trucoPie.jugar(jugadasPie[0]) # debe fallar, porque la mano tiene el turno de jugar
False
>>> trucoPie.jugar(jugadasPie[1])
False
>>> trucoPie.jugar(jugadasPie[2])
False
>>> trucoPie.jugar(jugadasPie[3])
False
>>> trucoMano.recibirJugada(jugadasPie[0]) # debe fallar, porque la mano tiene el turno
False
>>> trucoMano.recibirJugada(jugadasPie[1])
False
>>> trucoMano.recibirJugada(jugadasPie[2])
False
>>> trucoMano.recibirJugada(jugadasPie[3])
False
>>> trucoMano.jugadasPosibles()
[Carta(2, Palo('ESPADA')), Carta(3, Palo('ESPADA')), Canto ('Me voy al mazo') ]
>>> trucoPie.jugadasPosibles()
[Carta(3, Palo('ORO')), Canto ('Me voy al mazo') ]
>>> trucoMano.ganeYo()
False
>>> trucoPie.ganeYo()
False


>>> # ---------- TEST 4
>>> # Es el turno de la Mano, que juega Carta(3, Palo('ESPADA')) y pierde

>>> trucoMano.jugar(jugadasMano[0]) # la mano juega Carta(1, Palo.BASTO) - debe fallar, porque ya fue jugada
False
>>> trucoPie.recibirJugada(jugadasMano[0]) # debe fallar, porque ya fue jugada
False
>>> trucoMano.jugar(jugadasMano[1]) # la mano juega Carta(3, Palo.ESPADA)
True
>>> trucoPie.recibirJugada(jugadasMano[1])
True

>>> trucoMano.terminado()
True
>>> trucoPie.terminado()
True
>>> trucoMano.turnoDeJuego()
False
>>> trucoPie.turnoDeJuego()
False
>>> trucoMano.jugar(jugadasMano[0]) # debe fallar. El juego ya terminó
False
>>> trucoMano.jugar(jugadasMano[1])
False
>>> trucoMano.jugar(jugadasMano[2])
False
>>> trucoMano.jugar(jugadasMano[3])
False
>>> trucoPie.recibirJugada(jugadasMano[0]) # debe fallar. El juego ya terminó
False
>>> trucoPie.recibirJugada(jugadasMano[1])
False
>>> trucoPie.recibirJugada(jugadasMano[2])
False
>>> trucoPie.recibirJugada(jugadasMano[3])
False
>>> trucoMano.jugadasPosibles()
[]
>>> trucoPie.jugadasPosibles()
[]
>>> trucoMano.ganeYo()
False
>>> trucoPie.ganeYo()
True
