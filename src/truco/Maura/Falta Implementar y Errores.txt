Errores: 

* Cuando el envido no es querido queda en un estado feo, porque no puedo jugar mas cartas (SOLUCIONADO)

* Si canto truco, retruco, vale4, al cantar vale4 pincha con un IndexError: list index out of range. (SOOLUCIONADO)

* si juego el 2 de espada, la compu el 3 de oro y el ancho de basto, y despues yo juego el 3 de espada, 
el juego deberia teminar, porque la compu gano las 2 submanos. Sin embargo, el programa no se da cuenta 
y me pide la siguiente jugada para la compu (SOLUCIONADO)

* se puede cantar envido envido de entrada! eso esta mal. 
Por que envido envido es una opcion aparte, pero envido real envido no? (SOLUCIONADO)

* Los tantos estan hardcodeados. El usuario tendria que poder elegir cuanto cantar! (SOLUCIONADO)

Falta Implementar:
	- Al final de la partida cuando se piden que se verifiquen los puntos chequear que los puntos se hayan cantado
	bien del otro lado (del mio no me importa si el otro no reclama) (ES ASI???)

	- CUANDO UNO CANTA TRUCO Y EL OTRO LE RESONDE "PRIMERO ESTA EL ENVIDO"
		Para este caso se resuelve primero el Envido, despues el Truco y por ultimo se sigue jugando (SOLUCIONADO)

	- IRSE AL MAZO: cuando un jugador se va al mazo, puede (¿o debe?) mostrar
	las cartas que no haya bajado (por el canto de envido).
	Lo que tenía pensado es que si un jugador se va al mazo, envía a su
	contraparte la señal AL_MAZO junto con las cartas propias que no haya
	jugado aún, y que quiera mostrar a la contraparte.
	Si ambos jugadores juegan las 3 cartas, esta señal no sería necesaria.
	
		La "señal" podría implementarse en ManoTruco como dos métodos:
		- finJuego(self, cartasAMostrar)
		- recibirFinJuego(self, cartasMostradas)

		que actualizarían el estado del juego y lo llevarían a Terminado, e
		influirían en el cálculo de puntos, etc etc etc.

Habria que ver, ademas de como irse al mazo, como es el tema de mostrar los tantos. 
Ojo que el que se va al mazo no tiene por que mostrar las cartas... y si el otro no se aviva de 
pedir que muestre, no se deberia mostrar nada. Una cosa que se podria hacer seria: al terminar la mano, 
el que fue pie se queda escuchando, y el otro tiene dos opciones: o pedir que muestren cartas o dar ok de fin de mano. 
Luego, le toca al otro la posibilidad de hacer lo mismo: pedir mostrado de cartas o dar ok de fin de mano. 
Porque ojo que en realidad el que debe mostrar es el que gano el envido, que puede ser o no el que gano la mano. 
O sea: yo puedo irme al mazo pero el que tiene que mostrarme cartas es el otro!
Entonces, en ManoTruco habría que implementar un sólo método: MostrarCartasEnvido() que devuelve las cartas que hay 
que mostrar. Pero este metodo deberia ser llamado solo si el contrincante se avivo de pedir que yo muestre.

Por si no quedó claro, lo que decia de mostrar las cartas es independiente de irse al mazo 
(tambien puede ser que alguien necesite mostrar una carta pero la mano haya terminado sin que nadie se haya ido al mazo).
Para irse al mazo, puede ser como un canto más, y pasarse a la funcion "jugar" o "recibir jugada", o podria hacerse 
un metodo nuevo "IrseAlMazo". Para mi es mejor como un canto o una jugada normal, porque siempre las interfaces tienen que 
ser lo mas livianas posibles...

 > "Habria que ver, ademas de como irse al mazo, como es el tema de
mostrar los tantos. Ojo que el que se va al mazo no tiene por que

mostrar las cartas [...] Una cosa que se podria hacer seria: al terminar

la mano, el que fue pie se queda escuchando, y el otro tiene dos
opciones: o pedir que muestren cartas o dar ok de fin de mano. Luego, le
toca al otro la posibilidad de hacer lo mismo: pedir mostrado de cartas
o dar ok de fin de mano. Porque ojo que en realidad el que debe mostrar
es el que gano el envido, que puede ser o no el que gano la mano. O sea:
yo puedo irme al mazo pero el que tiene que mostrarme cartas es el otro!"


Buena observación, este caso de que tiene que mostrar el que gana, no el que va al mazo. 
Coincido en gral con todo el párrafo.


> "Entonces, en ManoTruco habría que implementar un sólo método: MostrarCartasEnvido() que devuelve las cartas 
que hay que mostrar. Pero este metodo deberia ser llamado solo si el contrincante se avivo de pedir que yo muestre."


Me gusta más finJuego() y recibirFinJuego(), ver más abajo


> "Por si no quedó claro, lo que decia de mostrar las cartas es independiente de irse al mazo (tambien puede ser que 
alguien necesite mostrar una carta pero la mano haya terminado sin que nadie se haya ido al mazo).
Para irse al mazo, puede ser como un canto más, y pasarse a la funcion "jugar" o "recibir jugada", o podria hacerse 
un metodo nuevo "IrseAlMazo". Para mi es mejor como un canto o una jugada normal, porque siempre las interfaces tienen 
que ser lo mas livianas posibles..."


Si tenemos en ManoTruco dos métodos:
- finJuego(cartas que muestro a mi oponente)
- recibirFinJuego(cartas que me muestra mi oponente)

que sean ambos obligatorios al terminar el juego, logramos satisfacer todas las necesidades:
- el que gana el envido (sea quien sea) tiene la opcion no obligatoria de pasar las cartas no mostradas (si las hubiera) 
para mostrarlas al oponente.
- serían obligatorios al terminar "normalmente" el juego (luego de 3 cartas) pero si alguien quiere irse al mazo, puede 
usar estos métodos justo para eso, cuando le toque jugar. (su adversario debería enviar el finJuego() correspondiente)
- las interfases quedan livianas y simples
- no se contamina el concepto de canto con un canto IrseAlMazo

PD: El adversario no tiene por qué pedir que se muestren las cartas que ganaron el envido. De hecho le conviene no pedirlo, 
el que gana el envido se jode por despistado...


